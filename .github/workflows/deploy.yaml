name: Terraform CI/CD

on:
  push:
    branches:
      - main
  pull_request:

env:
  AWS_REGION: us-east-1
  TF_VERSION: '1.9.8'   # example Terraform version
  TFLINT_VERSION: '0.58.1'
  TFSEC_VERSION: '1.28.14'

jobs:
  lint:
    name: Lint & Validate
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .   # root configs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        run: terraform init -backend=false

      - name: Terraform Format Check
        run: terraform fmt -check -recursive

      - name: Terraform Validate
        run: terraform validate

      - name: Install TFLint
        run: |
          curl -sLo tflint.zip \
            https://github.com/terraform-linters/tflint/releases/download/v${{ env.TFLINT_VERSION }}/tflint_linux_amd64.zip
          unzip tflint.zip -d /usr/local/bin/
          tflint --version

      - name: Run TFLint (Root + Modules)
        run: |
          tflint --init
          tflint .
          tflint modules/S3-Bucket

      - name: Install tfsec
        run: |
          curl -sLo tfsec \
            https://github.com/aquasecurity/tfsec/releases/download/v${{ env.TFSEC_VERSION }}/tfsec-linux-amd64
          chmod +x tfsec
          mv tfsec /usr/local/bin/

      - name: Run tfsec (Security Scan)
        run: |
          tfsec .
          tfsec modules/S3-Bucket

  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    needs: lint
    defaults:
      run:
        working-directory: .   # root configs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -out=tfplan

      - name: Upload Plan
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: tfplan

  apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: plan
    if: github.ref == 'refs/heads/main'
    defaults:
      run:
        working-directory: .   # root configs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Plan
        uses: actions/download-artifact@v4
        with:
          name: tfplan

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
