name: Terraform CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: 'Terraform Lint'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform
    steps:
      - name: 'Checkout GitHub repository'
        uses: actions/checkout@v2

      - name: 'Set up Terraform'
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.4.0

      - name: 'Install TFLint'
        run: |
          curl -sLo tflint.zip https://github.com/terraform-linters/tflint/releases/download/v0.46.1/tflint_linux_amd64.zip
          unzip tflint.zip -d /usr/local/bin/
          tflint --version

      - name: 'Run TFLint'
        run: |
          tflint --init
          tflint

  security:
    name: 'Terraform Security Scan'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform
    steps:
      - name: 'Checkout GitHub repository'
        uses: actions/checkout@v2

      - name: 'Install tfsec'
        run: |
          curl -sLo tfsec https://github.com/aquasecurity/tfsec/releases/download/v1.28.1/tfsec-linux-amd64
          chmod +x tfsec
          mv tfsec /usr/local/bin/
          tfsec --version

      - name: 'Run tfsec'
        run: tfsec .

  terraform-plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    needs: [lint, security]
    defaults:
      run:
        working-directory: terraform
    env:
      AWS_REGION: 'us-east-1'

    steps:
      - name: 'Checkout GitHub repository'
        uses: actions/checkout@v2

      - name: 'Configure AWS credentials'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: 'Set up Terraform'
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.4.0

      - name: 'Terraform Init'
        run: terraform init

      - name: 'Terraform Format'
        run: terraform fmt
        continue-on-error: true

      - name: 'Terraform Validate'
        run: terraform validate

      - name: 'Terraform Plan'
        run: terraform plan -out=tfplan

      - name: 'Upload Plan Artifact'
        uses: actions/upload-artifact@v3
        with:
          name: tfplan
          path: terraform/tfplan

  terraform-apply:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest
    needs: terraform-plan
    defaults:
      run:
        working-directory: terraform
    environment: DEV   # ðŸ‘ˆ requires manual approval in repo settings
    env:
      AWS_REGION: 'us-east-1'

    steps:
      - name: 'Checkout GitHub repository'
        uses: actions/checkout@v2

      - name: 'Configure AWS credentials'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: 'Set up Terraform'
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.4.0

      - name: 'Terraform Init'
        run: terraform init

      - name: 'Download Plan Artifact'
        uses: actions/download-artifact@v3
        with:
          name: tfplan
          path: terraform

      - name: 'Terraform Apply'
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve tfplan